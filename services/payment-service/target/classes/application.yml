spring:
  application:
    name: payment-service
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/paymentdb
    username: paymentuser
    password: paymentpass
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    locations: classpath:db/migration
  redis:
    host: localhost
    port: 6379
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    template:
      mandatory: true
      publisher-confirm-type: correlated
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/globalbooks

server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.globalbooks.payment: INFO
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    correlation: "[%X{traceId:-}] [%X{spanId:-}]"

# Dev mode overrides
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:tc:postgresql:15:///paymentdb
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
  redis:
    host: localhost
    port: 6379
  rabbitmq:
    host: localhost
    port: 5672

# Prod mode (PCI-compliant)
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}