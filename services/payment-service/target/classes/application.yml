spring:
  application:
    name: payment-service
  profiles:
    active: dev
  datasource:
    url: ${DB_URL:jdbc:postgresql://postgres:5432/paymentdb} # FIXED: use env with docker-compose service default instead of localhost
    username: ${DB_USERNAME:paymentuser}
    password: ${DB_PASSWORD:paymentpass}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    locations: classpath:db/migration
  data:
    redis: # FIXED: Spring Boot 3 uses spring.data.redis.*; previously spring.redis.* was ignored, defaulting to localhost
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq} # FIXED: default to docker-compose service name
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    template:
      mandatory: true
      publisher-confirm-type: correlated
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8080/auth/realms/globalbooks} # FIXED: make issuer configurable via env

server:
  port: ${SERVER_PORT:8081}

management:
  endpoint:
    health:
      show-details: always # FIXED: enable detailed health for debugging
      probes:
        enabled: true
  health:
    rabbit:
      enabled: true
    redis:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.globalbooks.payment: INFO
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    correlation: "[%X{traceId:-}] [%X{spanId:-}]"

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${DB_URL:jdbc:postgresql://postgres:5432/paymentdb} # FIXED: removed Testcontainers JDBC (jdbc:tc:...) which breaks dev runtime
    driver-class-name: org.postgresql.Driver # FIXED: ensure proper driver in dev
  data:
    redis: # FIXED: Spring Boot 3 uses spring.data.redis.* for dev profile as well
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq} # FIXED: align with compose defaults
    port: ${RABBITMQ_PORT:5672}

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}